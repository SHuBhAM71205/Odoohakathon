"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StreamDescription = void 0;
const bson_1 = require("../bson");
const common_1 = require("../sdam/common");
const server_description_1 = require("../sdam/server_description");
const RESPONSE_FIELDS = [
    'minWireVersion',
    'maxWireVersion',
    'maxBsonObjectSize',
    'maxMessageSizeBytes',
    'maxWriteBatchSize',
    'logicalSessionTimeoutMinutes'
];
    parseServerConnectionID(serverConnectionId) {
        // Connection ids are always integral, so it's safe to coerce doubles as well as
        // any integral type.
        return bson_1.Long.isLong(serverConnectionId)
            ? serverConnectionId.toBigInt()
            : // @ts-expect-error: Doubles are coercible to number
                BigInt(serverConnectionId);
    }
}
exports.StreamDescription = StreamDescription;
